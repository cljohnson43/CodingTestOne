package com.example.codingtestone

import org.junit.Test

import org.junit.Assert.*
import com.example.codingtestone.Room



class QuestionThreeTest {

    @Test
    fun isOutbreak() {
        var qThree = QuestionThree()

        val verticalTrue = arrayOf(
            arrayOf(
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false)
            ),
            arrayOf(
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false)
            ),
            arrayOf(
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false)
            ),
            arrayOf(
                Room(false),
                Room(true),
                Room(false),
                Room(true),
                Room(true),
                Room(false),
                Room(false),
                Room(false),
                Room(false)
            ),
            arrayOf(
                Room(false),
                Room(true),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false)
            ),
            arrayOf(
                Room(false),
                Room(true),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false)
            ),
            arrayOf(
                Room(false),
                Room(true),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false)
            ),
            arrayOf(
                Room(false),
                Room(true),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false)
            ),
            arrayOf(
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false)
            ),
            arrayOf(
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false)
            )
        )

        var expected = true
        var results = qThree.isOutbreak(verticalTrue)

        assertEquals("vertical true", expected, results)

        // case two

        val caseTwo = arrayOf(
            arrayOf(
                Room(true),
                Room(false),
                Room(true),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false)
            ),
            arrayOf(
                Room(false),
                Room(true),
                Room(false),
                Room(true),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false)
            ),
            arrayOf(
                Room(true),
                Room(false),
                Room(true),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false)
            ),
            arrayOf(
                Room(false),
                Room(true),
                Room(false),
                Room(true),
                Room(false),
                Room(true),
                Room(false),
                Room(false),
                Room(false)
            ),
            arrayOf(
                Room(false),
                Room(true),
                Room(false),
                Room(false),
                Room(true),
                Room(false),
                Room(false),
                Room(false),
                Room(false)
            ),
            arrayOf(
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(true),
                Room(false),
                Room(false),
                Room(false)
            ),
            arrayOf(
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(true),
                Room(false),
                Room(false)
            ),
            arrayOf(
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false)
            ),
            arrayOf(
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false)
            ),
            arrayOf(
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false)
            )
        )

        expected = false
        results = qThree.isOutbreak(caseTwo)

        assertEquals("no infection", expected, results)

        // Case three
        val horizontalTrue = arrayOf(
            arrayOf(
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false)
            ),
            arrayOf(
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false)
            ),
            arrayOf(
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false)
            ),
            arrayOf(
                Room(false),
                Room(true),
                Room(true),
                Room(true),
                Room(true),
                Room(true),
                Room(false),
                Room(false),
                Room(false)
            ),
            arrayOf(
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false)
            ),
            arrayOf(
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false)
            ),
            arrayOf(
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false)
            ),
            arrayOf(
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false)
            ),
            arrayOf(
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false)
            ),
            arrayOf(
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false)
            )
        )

        expected = true
        results = qThree.isOutbreak(horizontalTrue)

        assertEquals("horizontal true", expected, results)

        // Case four
        val blockFalse = arrayOf(
            arrayOf(
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false)
            ),
            arrayOf(
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false)
            ),
            arrayOf(
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false)
            ),
            arrayOf(
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false)
            ),
            arrayOf(
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false)
            ),
            arrayOf(
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false)
            ),
            arrayOf(
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false)
            ),
            arrayOf(
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false)
            ),
            arrayOf(
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(true),
                Room(true)
            ),
            arrayOf(
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(true),
                Room(true)
            )
        )

        expected = false
        results = qThree.isOutbreak(blockFalse)

        assertEquals("block false", expected, results)

        // Case five
        val blockTrue = arrayOf(
            arrayOf(
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false)
            ),
            arrayOf(
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false)
            ),
            arrayOf(
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false)
            ),
            arrayOf(
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false)
            ),
            arrayOf(
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false)
            ),
            arrayOf(
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false)
            ),
            arrayOf(
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false)
            ),
            arrayOf(
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(true)
            ),
            arrayOf(
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(true),
                Room(true)
            ),
            arrayOf(
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(true),
                Room(true)
            )
        )

        expected = true
        results = qThree.isOutbreak(blockTrue)

        assertEquals("block true", expected, results)

        // Case three
        val lastCase = arrayOf(
            arrayOf(
                Room(true),
                Room(true),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false)
            ),
            arrayOf(
                Room(false),
                Room(true),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false)
            ),
            arrayOf(
                Room(false),
                Room(true),
                Room(true),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false)
            ),
            arrayOf(
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false)
            ),
            arrayOf(
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false)
            ),
            arrayOf(
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false)
            ),
            arrayOf(
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false)
            ),
            arrayOf(
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false)
            ),
            arrayOf(
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false)
            ),
            arrayOf(
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false),
                Room(false)
            )
        )

        expected = true
        results = qThree.isOutbreak(lastCase)

        assertEquals("upper case Z true",expected, results)

    }
}